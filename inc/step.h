/* ---------------------------------------------------------------------
   NA 2004
   Projet       : -
   Fonction     : Objet 'step' pour les ODE
   Module       : CLIB/ODE
   Fichier      : step.h
   Creation     : 20-02-2005
   Modification : 20-02-2005
   --------------------------------------------------------------------- */


#ifndef _STEP_H_
#define _STEP_H_

#include <stdlib.h>

/*declaration public de la classe STEP*/
typedef struct _step STEP;





/* ---------------------------------------------------------------------
   step_new()
   ---------------------------------------------------------------------
   Role : Constructeur de l'objet STEP
   ---------------------------------------------------------------------
   E : hdid = le pas precedent
   E : hnext = pas suivant
   S : objet cree
   ---------------------------------------------------------------------
   Notes : 
   --------------------------------------------------------------------- */
STEP *step_new(double hdid,double hnext);







/* ---------------------------------------------------------------------
   step_put()
   ---------------------------------------------------------------------
   Role : permet de modifier les hdid et hnext
   ---------------------------------------------------------------------
   E : this  - step
   E : hdid  - step fait
   E : hnext - pas suivant
   S : 1 ok, 0 sinon
   ---------------------------------------------------------------------
   Notes : 0 = le STEP n'existe pas
   --------------------------------------------------------------------- */
unsigned int step_put(STEP *this, double hdid,double hnext);







/* ---------------------------------------------------------------------
   step_GetNext()
   ---------------------------------------------------------------------
   Role : retourne la valeur du prochain pas de temps
   ---------------------------------------------------------------------
   E : objet STEP
   ---------------------------------------------------------------------
   Notes : 
   --------------------------------------------------------------------- */
double step_GetNext(const STEP *this);








/* ---------------------------------------------------------------------
   step_GetPrev()
   ---------------------------------------------------------------------
   Role : retourne la valeur du pas de temps precedent
   ---------------------------------------------------------------------
   E : objet STEP
   ---------------------------------------------------------------------
   Notes : 
   --------------------------------------------------------------------- */
double step_GetPrev(const STEP *this);







/* ---------------------------------------------------------------------
   step_free()
   ---------------------------------------------------------------------
   Role : Destructeur de l'objet STEP
   ---------------------------------------------------------------------
   E : this = step a detruire
   ---------------------------------------------------------------------
   Notes : 
   --------------------------------------------------------------------- */
void step_free(STEP *this);



#endif

